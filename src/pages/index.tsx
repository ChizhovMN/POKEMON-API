import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState, useDeferredValue } from "react";
import { PokemonsAPI } from "./types";
import Header from "./header";
import Link from "next/link";
import next from "next";
import Footer from "./footer";
import PageBtn from "./pageBtn";
import BtnsWrapper from "./btnsWrapper";

const inter = Inter({ subsets: ["latin"] });
export const myLoader = (id: string | string[] | undefined) => {
  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;
};

export default function Home() {
  const [pokemons, setPokemons] = useState<PokemonsAPI>();
  const [view, setView] = useState<"pages" | "all">("pages");
  const [count, setCount] = useState(1);
  const allPokemons = Math.floor(pokemons?.count ? pokemons.count / 16 : 1);
  const fetcher = (link: string) => {
    fetch(link)
      .then((res) => res.json())
      .then((data: PokemonsAPI) => {
        setPokemons(data);
      })
      .catch((e) => console.log(e));
  };
  useEffect(
    () => fetcher("https://pokeapi.co/api/v2/pokemon/?limit=16&offset=0"),
    []
  );
  const handleClickViewAll = () => {
    fetcher("https://pokeapi.co/api/v2/pokemon/?limit=10000&offset=0");
    setView("all");
  };
  const handleCLickViewPage = () => {
    fetcher("https://pokeapi.co/api/v2/pokemon/?limit=16&offset=0");
    setView("pages");
  };
  const handleClickNext = () => {
    if (pokemons?.next) {
      fetcher(pokemons?.next);
      setCount(count + 1);
    }
  };
  const handleClickPrevious = () => {
    if (pokemons?.previous) {
      fetcher(pokemons?.previous);
      setCount(count - 1);
    }
  };
  const PokemonPages = (
    <div className={styles["main-btns"]}>
      <PageBtn
        btnName={"Previous page"}
        handleClick={() => handleClickPrevious()}
      />
      <div className={styles.pagination}>
        <input
          className={styles["pagination-input"]}
          type="number"
          name="page"
          id="page"
          min={1}
          value={count}
          onChange={(event) => {
            if (event.target instanceof HTMLInputElement) {
              if (+event.target.value > allPokemons) {
                event.target.value = `${allPokemons}`;
              } else if (+event.target.value < 1) {
                event.target.value = "1";
              }
              const value =
                event.target.value === "1" ? 0 : 16 * +event.target.value;
              fetcher(
                `https://pokeapi.co/api/v2/pokemon/?limit=16&offset=${value}`
              );
              setCount(+event.target.value);
            }
          }}
        />
        <div>/ {allPokemons}</div>
      </div>
      <PageBtn btnName={"Next page"} handleClick={() => handleClickNext()} />
    </div>
  );
  const viewPort = {
    all: <></>,
    pages: PokemonPages,
  };
  return (
    <>
      <Head>
        <title>POKEMON API</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        pokemonsCounter={pokemons?.count ? pokemons.count : 0}
        btnNameAllView={"ALL"}
        btnNamePageView={"PAGE"}
        handleClickAllView={handleClickViewAll}
        handleClickPageView={handleCLickViewPage}
      />
      <main className={styles.main}>
        <div className={styles["main-table"]}>
          {pokemons?.results.map((item) => {
            const urlSplit = item.url.split("/");
            const id = urlSplit[urlSplit.length - 2];
            return (
              <Link
                key={id}
                id={id}
                className={styles["main-item"]}
                href={`pokemon/${id}`}
              >
                <Image
                  unoptimized
                  loader={() => myLoader(id)}
                  src={myLoader(id)}
                  alt={item.name}
                  width={150}
                  height={150}
                />
                {item.name}
              </Link>
            );
          })}
        </div>
        {viewPort[view]}
        {/* <BtnsWrapper
          styleWrapper={"main-btns"}
          style={"main-btn"}
          btnName={"Previous page"}
          handleClick={() => handleClickPrevious()}
        >
          <div className={styles.pagination}>
            <input
              className={styles["pagination-input"]}
              type="number"
              name="page"
              id="page"
              min={1}
              value={count}
              onChange={(event) => {
                if (event.target instanceof HTMLInputElement) {
                  if (+event.target.value > allPokemons) {
                    event.target.value = `${allPokemons}`;
                  } else if (+event.target.value < 1) {
                    event.target.value = "1";
                  }
                  const value =
                    event.target.value === "1" ? 0 : 16 * +event.target.value;
                  fetcher(
                    `https://pokeapi.co/api/v2/pokemon/?limit=16&offset=${value}`
                  );
                  setCount(+event.target.value);
                }
              }}
            />
            <div>/ {allPokemons}</div>
          </div>
        </BtnsWrapper> */}
      </main>
      <Footer />
    </>
  );
}
