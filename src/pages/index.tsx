import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import { PokemonsAPI } from "./types";
import Footer from "./footer";
import Header from "./header";
import Link from "next/link";

const inter = Inter({ subsets: ["latin"] });
export const myLoader = (id: string | string[] | undefined) => {
  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;
};

export default function Home() {
  const [pokemons, setPokemons] = useState<PokemonsAPI>();
  const [images, setImages] = useState();
  const [count, setCount] = useState(1);
  const fetcher = (link: string) => {
    fetch(link)
      .then((res) => res.json())
      .then((data: PokemonsAPI) => {
        setPokemons(data);
      })
      .catch((e) => console.log(e));
  };
  useEffect(
    () => fetcher("https://pokeapi.co/api/v2/pokemon/?limit=16&offset=0"),
    []
  );
  return (
    <>
      <Head>
        <title>POKEMON API</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header pokemonsCounter={pokemons?.count ? pokemons.count : 0} />
      <main>
        <div className={styles.main}>
          {pokemons?.results.map((item) => {
            const urlSplit = item.url.split("/");
            const id = urlSplit[urlSplit.length - 2];
            return (
              <Link
                key={id}
                id={id}
                className={styles["main-item"]}
                href={`pokemon/${id}`}
              >
                <Image
                  unoptimized
                  loader={() => myLoader(id)}
                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}
                  alt={item.name}
                  width={200}
                  height={200}
                />
                {item.name}
              </Link>
            );
          })}
        </div>
        <div className={styles["main-btns"]}>
          <button
            className={styles["main-btn"]}
            onClick={() => {
              if (pokemons?.previous) {
                fetcher(pokemons?.previous);
                setCount(count - 1);
              }
            }}
          >
            Previos Page
          </button>
          <div>Page:{count}</div>
          <button
            className={styles["main-btn"]}
            onClick={() => {
              if (pokemons?.next) {
                fetcher(pokemons?.next);
                setCount(count + 1);
              }
            }}
          >
            Next Page
          </button>
        </div>
      </main>
      <Footer />
    </>
  );
}
